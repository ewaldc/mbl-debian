# Save working directory
WORKDIR=$PWD

# Target directory
TARGET=mbl-debian

# Source directories
CONFIG_DIR="$( cd "$( dirname "${BASH_SOURCE[0]}" )" && pwd )"
DTS_DIR="${CONFIG_DIR}/dts"
DTS_MBL="${DTS_DIR}/wd-mybooklive.dts"
DTB_MBL="${DTS_DIR}/wd-mybooklive.dtb"

# Operating System build
ARCH=powerpc
RELEASE=unstable

DISTRIBUTION=Debian
RELEASE=unstable
SOURCE_HTTP="http://ftp.ports.debian.org/debian-ports"
#SOURCE_HTTP="http://ftp.de.debian.org/debian-ports"
SOURCE_ISO="$PWD/source/debian-12.0.0-powerpc-NETINST-1.iso"
#SOURCE_ISO="$PWD/source/debian-12.0.0-powerpc-MBL-NETINST-1.iso"
#SOURCE_DIR="$PWD/iso"
#SOURCE="https://snapshot.debian.org/archive/debian-ports/20230513T065102Z/"
SOURCE_SRC="http://ftp.debian.org/debian"
MULTISTRAP_CONFIG="config/multistrap_dir.conf"
DEBOOTSTRAP=/usr/sbin/debootstrap
MULTISTRAP=/usr/sbin/multistrap
PACKAGES=config/${ARCH}-packages
SSH_SERVER=dropbear  # dropbear or openssh
REV=1.00

# Kernel build key parameters
# KERNEL_BUILD_TYPE:    clean -> cleanly rebuilds a fresh kernel from git sources
#                       rebuild (default) -> rebuilds existing kernel source from cached source

#KERNEL_BUILD_TYPE="clean"  # ["clean" | "rebuild"]

# KERNEL_BUILD_TARGET:    deb-pkg -> builds a Debian kernel package
# KERNEL_BUILD_TARGET:    uImage -> builds a uboot uImage kernel
KERNEL_BUILD_TARGET="deb-pkg"  # [ "deb-pkg" | "uImage" ]

#LINUX_KERNEL_VERSION="5.17.15"
LINUX_KERNEL_VERSION="6.4.10"
GIT_EMAIL_ADDRESS="<MUST CHANGE>"

# Kernel build script variables

# This "cached-linux" serves as a local cache for a unmodified linux.git
LINUX_LOCAL="cached-linux"

# OS packages
# Packages that are installed by debbootstrap - please note that
# debootstrap package dependency isn't great...
# Don't use tabs to align the entries! Debootstrap will choke and
# complain about missing "strange number" dependencies.
#
# Some of these packages could be moved to INSTALL_PACKAGES,
# others like binutils,gzip,u-boot-tools are necessary for
# scripts that run before we can apt install packages...
#
DEBOOTSTRAP_INCLUDE_PACKAGES="gzip,u-boot-tools,device-tree-compiler,binutils,busybox-static,\
        bzip2,locales,aptitude,file,xz-utils,initramfs-tools,fdisk,gdisk,\
        console-common,console-setup,console-setup-linux,parted,e2fsprogs,\
        dropbear,dropbear-initramfs,keyboard-configuration,ca-certificates,\
        debian-archive-keyring,debian-ports-archive-keyring,\
        bsdextrautils,libzstd1,zstd,libubootenv-tool,dmsetup"   # mdadm,

# That's why the heavy lifting should be done by apt that will be run in the chroot
APT_INSTALL_PACKAGES="needrestart zip unzip vim screen htop ethtool iperf3 \
	netcat-traditional net-tools curl wget apt systemd-timesyncd \
	openssl smartmontools hdparm smartmontools  \
	nfs-common nfs-kernel-server rpcbind samba rsync telnet \
	btrfs-progs ntfs-3g  \
	bcache-tools duperemove fuse3 thin-provisioning-tools \
	udisks2 udisks2-btrfs unattended-upgrades \
	cockpit cockpit-packagekit cockpit-storaged \
	watchdog lm-sensors uuid-runtime cryptsetup bash-completion"
  #	udisks2-lvm2 cockpit-networkmanager xfsprogs exfatprogs dosfstools


# OS settings
ROOT_PASSWORD=debian
DISTRIBUTION=Debian
DATE=$(date +%Y%m%d-%H%M)

QEMU_STATIC=/usr/bin/qemu-ppc-static
MKIMAGE=/usr/bin/mkimage
DTC=/usr/bin/dtc
KPARTX=/sbin/kpartx
PARTPROBE=/sbin/partprobe


DO_COMPRESS=1

# HDD Image settings
BOOTSIZE=285212672   # 272 MiB
ROOTSIZE=4152360960  # ~ 4GiB
SWAPFILESIZE=768     # in MiB
BOOTUUID=$(uuidgen)
ROOTPARTUUID=$(uuidgen)
ROOTUUID=$(uuidgen)
